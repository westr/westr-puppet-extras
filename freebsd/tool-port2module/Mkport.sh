#!/bin/sh

# Simple shell script that makes the directory and base init.pp file
# for a port.

# Constants
PUPMODDIR="/usr/local/etc/puppet/modules"

# 
if [ "x$2x" = "xx" ]; then
	echo "Insufficient parameters.  Format: $0 <portname> <portorigin>"
	echo "  portname = normal name (eg: postfix)"
	echo "  portorigin = port origin (eg: mail/postfix)"
	exit 1
fi


PNAME=$1
PCODE=$2
PCODESM=`echo $PCODE | cut -d'/' -f2`
PINIT="$PUPMODDIR/$PNAME/manifest/init.pp"

# Safety check
if [ -d "$PNAME" ]; then
	echo "Module directory exists.   Not doing anything."
	exit 1
fi

if [ ! -d "/usr/ports/$PCODE" ]; then
	echo "Unable to find port: $PCODE."
	read -p "Type something to override and continue, or enter to stop: " -t 5 INPUT
	if [ -z $INPUT ]; then
		echo "  Not doing anything."
		exit 1
	fi
fi

echo -n "Found port ($PCODE)."

	
# Make directories
echo -n "  Creating directories."
mkdir -p $PNAME/manifest
mkdir -p $PNAME/files

######## the init.pp file default [Note lack of ending '}' for package and class]
echo "  Creating init.pp file."
cat - <<EOF > $PINIT

# Autogenerated file by $0
class $PNAME {
	package { "$PCODE":
		provider => portupgrade,
		alias	=> "$PNAME",
EOF

######## Add port dependencies, so they get installed too!
#cmd = pkg_info -qr apache-*
#output:
#@pkgdep expat-2.0.1
#@pkgdep perl-5.8.8_1
#@pkgdep pcre-7.9
#@pkgdep db42-4.2.52_5
#@pkgdep libiconv-1.11_1
#@pkgdep apr-db42-1.3.3.1.3.4

#OUTPUT=`pkg_info -qr $PNAME-*`

OUTPUT=`pkg_info -qr $PNAME-* | sed -n -E 's/^.* ([a-z0-9-]+)-([0-9._,]+)$/\1/Ip'`

echo -n "  Dependencies found: ( "
for PDEP in $OUTPUT
do
	echo -n "$PDEP "
done
echo ") adding to package."

if [ ! -z "$OUTPUT" ]; then
	# Add dependency header
	echo "		require	=> [" >> $PINIT
	for PDEP in $OUTPUT
	do
		# echo "debug: [$PDEP]"
		# Add each dependency
		echo "			Package[\"$PDEP\"]," >> $PINIT
	done
	# Add dependency footer
	echo "		]," >> $PINIT
fi

# Now close out main package group, but not class
echo "		} # package" >> $PINIT

######## the port option file (note that file is stored with latter part of portorigin

if [ -f /var/db/ports/$PCODESM/options ]; then
	echo "  Local port compilation option found (/var/db/ports/$PCODESM/options) - adding."
	# copy the local file 
	cp /var/db/ports/$PCODESM/options $PNAME/files/port-options
	# Add the necessary config to init.pp

cat - <<EOF >> $PINIT

	# Port compilation configuration  (good!)
	file    { "/var/db/ports/$PCODESM/options":
		alias   => "$PNAME-port-options",
		source  => "puppet:///modules/$PNAME/port-options",
		owner   => root,
		group   => wheel,
		mode    => 644,
	} # file

EOF

fi


####### the end of the the init.pp file [Add the lacking '}']

echo >> $PINIT
echo '}  # end of class' >> $PINIT
echo >> $PINIT

echo "Completed."
